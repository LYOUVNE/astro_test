---
import BaseLayout from '../../layouts/BaseLayout.astro';
import BlogPost from '../../layouts/BlogPost.astro';

type GetStaticPathsReturn = {
  params: { tag: string };
  props: { posts: Post[] };
}[];

type Post = {
  title: string;
  author: string;
  description: string;
  image: {
    url: string;
    alt: string;
  }
  pubDate: Date;
  tags: string[];
}

export async function getStaticPaths(): Promise<GetStaticPathsReturn> {
  const allPosts = await Astro.glob('../posts/*.md');

  const uniqueTags = [...new Set(allPosts.map((post) => post.frontmatter.tags).flat())];

  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts
    .filter((post) => post.frontmatter.tags.includes(tag))
    .map((post): Post => {
      return {
        title: post.frontmatter.title,
        author: post.frontmatter.author,
        description: post.frontmatter.description,
        image: post.frontmatter.image,
        pubDate: post.frontmatter.pubDate,
        tags: post.frontmatter.tags
      };
    });

    return {
      params: { tag: tag.toString() },
      props: { posts: filteredPosts},
    };
  });
}

const { tag } = Astro.params;
const { posts } = Astro.props;
---
<BaseLayout pageTitle={tag}>
  <p>包含「{tag}」标签的文章</p>
  <ul>
    {posts.map((post) => <BlogPost url={post.image.url} title={post.title}/>)}
  </ul>
</BaseLayout>